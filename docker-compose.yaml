version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-35
    ports:
      - "80:80"
    depends_on:
      - api

  api:
    build:
      context: .
    image: alexeygalt/todolist
    depends_on:
      migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env

  migration:
    build:
      context: .
    image: alexeygalt/todolist
    environment:
      - DOCKER_DEFAULT_PLATFORM=${DOCKER_DEFAULT_PLATFORM}
#    platform: linux/amd64
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate
    volumes:
      - ./.env:/app/.env

  db:
    image: postgres:latest
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 3s
      timeout: 3s
      retries: 15
#    command:
#      - apt install libpq
    ports:
    - "5432:5432"

volumes:
  pg_data: